**********************
GREEDY ALGORITHM
*********************

- Each step calculate optimal solution ...don't care about future

Advantages
- easy to implement
- less complex

Disadvantages
- will not work always for eg. finding min distance b/w two points

Applications
- dikjastra
- min. spanning tree
- topological sort
- job sequencing
- activity selection process


Problem
- "Activity Selection problem"
    - n activity, start time , end time
    - identify  a person can do how many activities

    Eg. act  : a1 a2 a3
        start: 12 10 20
        end  : 25 20 30

    answer : a2,a3

    Eg.     act  : a1 a2 a3 a4 a5 a6
            start: 0  3  1  5  5  8
            end  : 6  4  2  9  7  9

            act  : a3 a2 a1 a5 a4 a6
            start: 1  3   0  5  5  8
            end  : 2  4  6   7  9  9

-Job sequence problem
 - job-id, deadline, profit

    [a,b,c,d,e]
    [2,1,2,1,3]
    [100,19,27,25,15]


NOTE : ****Solution - sort the things that we want to maximise or minimise ,ascending or decending based on requirement

***********************
DIVIDE AND CONQUER
***********************

- divide -> recursion -> conquer

advantages
-same cache can be given to subproblems
- fing other advantages

disadvantages
-



